
1.1

C code:
#include <stdio.h>
void FindWaitingTime(int processes[],int n,int wt[], int bt[]){
    wt[0]=0;
    for (int i = 1;i<n;i++){
        wt[i]=wt[i-1]+bt[i-1];
    }
}
//Turnaround time (TAT) is the time interval from the time of 
//submission of a process to the time of the completion of the process.
void findTAT(int processes[],int n,int wt[], int bt[], int TAT[]){
    for (int i = 0;i<n;i++){
        TAT[i]=wt[i]+bt[i];
    }
}
int main(){
    int n=3;
    int total_wt=0,total_tat=0,avg_wt=0,avg_tat=0;
    int processes[] = {1,2,3};
    int bt[]={4,2,6};
    int CT[3]={0};
    int wt[3]={0};
    int TAT[3]={0};
    FindWaitingTime(processes,n,wt,bt);
    findTAT(processes,n,wt,bt,TAT);

    //now we find average times and CT(completion time)
    for (int i =0;i<n;i++){
        CT[i]=TAT[i];   //in 1.1 case they are equal
        total_wt = total_wt + wt[i];  
        total_tat = total_tat + TAT[i];  
    }
    avg_wt=(float)total_wt/(float)n;
    avg_tat=(float)total_tat/(float)n;

    //output
     printf("Processes   Completion time   Waiting time   Turn around time\n");
     for (int i=0;i<n;i++){
        printf("   %d ",(i+1)); 
        printf("       %d ", CT[i] ); 
        printf("              %d",wt[i] ); 
        printf("                     %d\n",TAT[i] );  
     }

    printf("Average waiting time = %d",avg_wt); 
    printf("\n"); 
    printf("Average turn around time = %d ",avg_tat);  

    return 0;
} 
result:
  23/09/2020   16:07.01   /drives/c/Users/Evgeny/Desktop/os/lab/week6  ./a.exe
Processes   Completion time   Waiting time   Turn around time
   1        10               0                     10
   2        15               10                     15
   3        23               15                     23
Average waiting time = 8
Average turn around time = 16   
